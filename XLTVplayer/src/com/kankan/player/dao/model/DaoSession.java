package com.kankan.player.dao.model;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.kankan.player.dao.model.VideoHistory;
import com.kankan.player.dao.model.Subtitle;
import com.kankan.player.dao.model.video;
import com.kankan.player.dao.model.TDVideo;
import com.kankan.player.dao.model.FileExploreHistory;

import com.kankan.player.dao.model.VideoHistoryDao;
import com.kankan.player.dao.model.SubtitleDao;
import com.kankan.player.dao.model.videoDao;
import com.kankan.player.dao.model.TDVideoDao;
import com.kankan.player.dao.model.FileExploreHistoryDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig videoHistoryDaoConfig;
    private final DaoConfig subtitleDaoConfig;
    private final DaoConfig videoDaoConfig;
    private final DaoConfig tDVideoDaoConfig;
    private final DaoConfig fileExploreHistoryDaoConfig;

    private final VideoHistoryDao videoHistoryDao;
    private final SubtitleDao subtitleDao;
    private final videoDao videoDao;
    private final TDVideoDao tDVideoDao;
    private final FileExploreHistoryDao fileExploreHistoryDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        videoHistoryDaoConfig = daoConfigMap.get(VideoHistoryDao.class).clone();
        videoHistoryDaoConfig.initIdentityScope(type);

        subtitleDaoConfig = daoConfigMap.get(SubtitleDao.class).clone();
        subtitleDaoConfig.initIdentityScope(type);

        videoDaoConfig = daoConfigMap.get(videoDao.class).clone();
        videoDaoConfig.initIdentityScope(type);

        tDVideoDaoConfig = daoConfigMap.get(TDVideoDao.class).clone();
        tDVideoDaoConfig.initIdentityScope(type);

        fileExploreHistoryDaoConfig = daoConfigMap.get(FileExploreHistoryDao.class).clone();
        fileExploreHistoryDaoConfig.initIdentityScope(type);

        videoHistoryDao = new VideoHistoryDao(videoHistoryDaoConfig, this);
        subtitleDao = new SubtitleDao(subtitleDaoConfig, this);
        videoDao = new videoDao(videoDaoConfig, this);
        tDVideoDao = new TDVideoDao(tDVideoDaoConfig, this);
        fileExploreHistoryDao = new FileExploreHistoryDao(fileExploreHistoryDaoConfig, this);

        registerDao(VideoHistory.class, videoHistoryDao);
        registerDao(Subtitle.class, subtitleDao);
        registerDao(video.class, videoDao);
        registerDao(TDVideo.class, tDVideoDao);
        registerDao(FileExploreHistory.class, fileExploreHistoryDao);
    }
    
    public void clear() {
        videoHistoryDaoConfig.getIdentityScope().clear();
        subtitleDaoConfig.getIdentityScope().clear();
        videoDaoConfig.getIdentityScope().clear();
        tDVideoDaoConfig.getIdentityScope().clear();
        fileExploreHistoryDaoConfig.getIdentityScope().clear();
    }

    public VideoHistoryDao getVideoHistoryDao() {
        return videoHistoryDao;
    }

    public SubtitleDao getSubtitleDao() {
        return subtitleDao;
    }

    public videoDao getVideoDao() {
        return videoDao;
    }

    public TDVideoDao getTDVideoDao() {
        return tDVideoDao;
    }

    public FileExploreHistoryDao getFileExploreHistoryDao() {
        return fileExploreHistoryDao;
    }

}
